/* tslint:disable */
/* eslint-disable */
/**
 * Virki API
 * REST API for the Virki 2FA service.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EncryptedKeysRecovery
 */
export interface EncryptedKeysRecovery {
    /**
     * 
     * @type {any}
     * @memberof EncryptedKeysRecovery
     */
    masterKeyEncryptedWithRecoveryKey: any | null;
    /**
     * 
     * @type {any}
     * @memberof EncryptedKeysRecovery
     */
    recoveryKeyEncryptedWithMasterKey: any | null;
}

/**
 * Check if a given object implements the EncryptedKeysRecovery interface.
 */
export function instanceOfEncryptedKeysRecovery(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "masterKeyEncryptedWithRecoveryKey" in value;
    isInstance = isInstance && "recoveryKeyEncryptedWithMasterKey" in value;

    return isInstance;
}

export function EncryptedKeysRecoveryFromJSON(json: any): EncryptedKeysRecovery {
    return EncryptedKeysRecoveryFromJSONTyped(json, false);
}

export function EncryptedKeysRecoveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncryptedKeysRecovery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'masterKeyEncryptedWithRecoveryKey': json['masterKeyEncryptedWithRecoveryKey'],
        'recoveryKeyEncryptedWithMasterKey': json['recoveryKeyEncryptedWithMasterKey'],
    };
}

export function EncryptedKeysRecoveryToJSON(value?: EncryptedKeysRecovery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'masterKeyEncryptedWithRecoveryKey': value.masterKeyEncryptedWithRecoveryKey,
        'recoveryKeyEncryptedWithMasterKey': value.recoveryKeyEncryptedWithMasterKey,
    };
}

