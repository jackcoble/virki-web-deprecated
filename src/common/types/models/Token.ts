/* tslint:disable */
/* eslint-disable */
/**
 * Virki API
 * REST API for the Virki 2FA service.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TokenAlgorithm } from './TokenAlgorithm';
import {
    TokenAlgorithmFromJSON,
    TokenAlgorithmFromJSONTyped,
    TokenAlgorithmToJSON,
} from './TokenAlgorithm';
import type { TokenPeriod } from './TokenPeriod';
import {
    TokenPeriodFromJSON,
    TokenPeriodFromJSONTyped,
    TokenPeriodToJSON,
} from './TokenPeriod';
import type { TokenType } from './TokenType';
import {
    TokenTypeFromJSON,
    TokenTypeFromJSONTyped,
    TokenTypeToJSON,
} from './TokenType';

/**
 * 
 * @export
 * @interface Token
 */
export interface Token {
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    id?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    vaultId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    icon?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    uriString?: any | null;
    /**
     * 
     * @type {TokenType}
     * @memberof Token
     */
    type?: TokenType;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    label?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    secret?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    issuer?: any | null;
    /**
     * 
     * @type {TokenAlgorithm}
     * @memberof Token
     */
    algorithm?: TokenAlgorithm;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    digits?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Token
     */
    counter?: any | null;
    /**
     * 
     * @type {TokenPeriod}
     * @memberof Token
     */
    period?: TokenPeriod;
}

/**
 * Check if a given object implements the Token interface.
 */
export function instanceOfToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TokenFromJSON(json: any): Token {
    return TokenFromJSONTyped(json, false);
}

export function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'vaultId': !exists(json, 'vaultId') ? undefined : json['vaultId'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'uriString': !exists(json, 'uriString') ? undefined : json['uriString'],
        'type': !exists(json, 'type') ? undefined : TokenTypeFromJSON(json['type']),
        'label': !exists(json, 'label') ? undefined : json['label'],
        'secret': !exists(json, 'secret') ? undefined : json['secret'],
        'issuer': !exists(json, 'issuer') ? undefined : json['issuer'],
        'algorithm': !exists(json, 'algorithm') ? undefined : TokenAlgorithmFromJSON(json['algorithm']),
        'digits': !exists(json, 'digits') ? undefined : json['digits'],
        'counter': !exists(json, 'counter') ? undefined : json['counter'],
        'period': !exists(json, 'period') ? undefined : TokenPeriodFromJSON(json['period']),
    };
}

export function TokenToJSON(value?: Token | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'vaultId': value.vaultId,
        'icon': value.icon,
        'uriString': value.uriString,
        'type': TokenTypeToJSON(value.type),
        'label': value.label,
        'secret': value.secret,
        'issuer': value.issuer,
        'algorithm': TokenAlgorithmToJSON(value.algorithm),
        'digits': value.digits,
        'counter': value.counter,
        'period': TokenPeriodToJSON(value.period),
    };
}

